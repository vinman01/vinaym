sudo hostnamectl set-hostname aws-ec2-kube-master-node
sudo hostnamectl set-hostname aws-ec2-kube-worker-node

Step 3: Installing Docker

sudo apt update -y
sudo apt-get update -y
sudo apt install docker.io -y
sudo systemctl start docker
sudo systemctl enable docker
apt-get install -y apt-transport-https
sudo apt-get install -y apt-transport-https ca-certificates curl


Step 4: Installing Kubeadm, Kubelet, and Kubectl

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg
--
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
---
sudo apt update
sudo apt-get update -y

Then, install kubeadm, kubectl, and kubelet:

sudo apt install kubeadm kubelet kubectl -y


Step 5: Initializing Your Kubernetes Cluster
Disable swap memory to satisfy the kubelet prerequisites:

sudo swapoff -a

sudo  kubeadm init

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml


Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.8.182:6443 --token pbwdrj.pb66ggw3sm2bw99s --discovery-token-ca-cert-hash sha256:6357f9d35cf3d50a0cdd334bc64f1be2d8320d24ddd2c780c3af6a10ec07c1da



echo ‘{“exec-opts”: [“native.cgroupdriver=systemd”]}’ | sudo tee /etc/docker/daemon.json

sudo systemctl daemon-reload
sudo systemctl restart docker
sudo systemctl restart kubelet
systemctl enable kubelet.service
kubectl get nodes
kubectl get nodes -o wide
kubectl get pods
kubectl get pods -o wide

kubectl exec testpod3 -it -c c00  -- /bin/bash



